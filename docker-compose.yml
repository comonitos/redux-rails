version: '3.5'

services:
  client-app:
    container_name: monitor-client
    build:
      context: client
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - server-app
    env_file:
      - .env
    ports:
      - '8080:80'
    networks:
      - app-network

  server-app:
    container_name: monitor-server
    build:
      context: server
      dockerfile: Dockerfile
      args:
        ENV: 'development'
    restart: unless-stopped
    depends_on:
      - db
      - redis
    env_file:
      - .env
    ports:
      - '9090:80'
    volumes:
      - ./server:/app
      - ./server/Docker/usr/.gemrc:/root/.gemrc
      - gems-cache:/usr/local/bundle/gems
    networks:
      - app-network
  sidekiq:
    container_name: sidekiq-worker
    build:
      context: server
      dockerfile: sidekiq.Dockerfile
      args:
        ENV: 'development'
    restart: unless-stopped
    depends_on:
      - db
      - redis    
    env_file: .env
    volumes:
      - ./server:/app
      - gems-cache:/usr/local/bundle/gems
    networks:
      - app-network
  db:
    image: postgres:12.2-alpine
    restart: always
    env_file:
      - .env
    volumes:
      - db-volume:/var/lib/postgresql/data
    networks:
      - app-network
  redis:
    image: redis:5.0.8-alpine
    volumes:
      - redis-volume:/data
    networks:
      - app-network

volumes:
  db-volume:
  redis-volume:
  gems-cache:
networks:
  app-network:
    driver: bridge
